---

- include: python_base.yml

- name: update apt
  action: apt update_cache=yes

- name: install python-software-properties
  action: apt pkg=python-software-properties state=present

- name: add nginx ppa
  action: apt_repository repo=ppa:nginx/stable state=present

- name: install web server packages
  action: apt pkg={{ item }} state=installed
  with_items:
    - build-essential
    - libxml2-dev
    - libjpeg62
    - libjpeg62-dev
    - libfreetype6
    - libfreetype6-dev
    - zlib1g-dev
    - libpcre3-dev
    - nginx
    - git
    - libevent-dev

- name: remove default nginx site
  action: file path=/etc/nginx/sites-enabled/default state=absent

- name: write nginx.conf
  action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf
  notify:
    - restart nginx

- name: create supervisord config folder
  action: file dest=/etc/supervisor state=directory owner=root

- name: create supervisord config
  action: template src=templates/supervisord.conf dest=/etc/supervisord.conf

- name: include supervisord_engine_base config
  action: template src=templates/supervisor_base.ini dest=/etc/supervisor/supervisor_base.ini

- name: create supervisord init script
  action: template src=templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

- name: link supervisord script
  action: file src={{ anaconda_home }}/bin/supervisord dest=/usr/local/bin/supervisord state=link

- name: link supervisorctl script
  action: file src={{ anaconda_home }}/bin/supervisorctl dest=/usr/local/bin/supervisorctl state=link

- name: start supervisord service and have it run during system startup
  action: service name=supervisord state=started enabled=yes

- name: ensure log directory
  action: file dest=/var/log/{{ app_name }} state=directory

- name: create nginx site config
  action: template src=templates/nginx_site.conf dest=/etc/nginx/sites-available/{{ app_name }}.conf

- name: link nginx config
  action: file src=/etc/nginx/sites-available/{{ app_name }}.conf dest=/etc/nginx/sites-enabled/{{ app_name }}.conf state=link
  notify:
    - restart nginx

- name: add env variables
  action: template src=templates/profile.sh dest=/etc/profile.d/{{ app_name }}.sh
  notify:
    - source env variables